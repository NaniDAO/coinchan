/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WlfiRouteImport } from './routes/wlfi'
import { Route as UserRouteImport } from './routes/user'
import { Route as SwapRouteImport } from './routes/swap'
import { Route as SendRouteImport } from './routes/send'
import { Route as OrdersRouteImport } from './routes/orders'
import { Route as OneshotRouteImport } from './routes/oneshot'
import { Route as LimitRouteImport } from './routes/limit'
import { Route as LaunchRouteImport } from './routes/launch'
import { Route as FarmRouteImport } from './routes/farm'
import { Route as ExploreRouteImport } from './routes/explore'
import { Route as EnsRouteImport } from './routes/ens'
import { Route as CultRouteImport } from './routes/cult'
import { Route as CoinsRouteImport } from './routes/coins'
import { Route as CoinpaperRouteImport } from './routes/coinpaper'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PositionsIndexRouteImport } from './routes/positions/index'
import { Route as FarmIndexRouteImport } from './routes/farm/index'
import { Route as UUserIdRouteImport } from './routes/u.$userId'
import { Route as PositionsCreateRouteImport } from './routes/positions/create'
import { Route as FarmCreateRouteImport } from './routes/farm/create'
import { Route as CCoinIdRouteImport } from './routes/c.$coinId'

const WlfiRoute = WlfiRouteImport.update({
  id: '/wlfi',
  path: '/wlfi',
  getParentRoute: () => rootRouteImport,
} as any)
const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const SwapRoute = SwapRouteImport.update({
  id: '/swap',
  path: '/swap',
  getParentRoute: () => rootRouteImport,
} as any)
const SendRoute = SendRouteImport.update({
  id: '/send',
  path: '/send',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersRoute = OrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any)
const OneshotRoute = OneshotRouteImport.update({
  id: '/oneshot',
  path: '/oneshot',
  getParentRoute: () => rootRouteImport,
} as any)
const LimitRoute = LimitRouteImport.update({
  id: '/limit',
  path: '/limit',
  getParentRoute: () => rootRouteImport,
} as any)
const LaunchRoute = LaunchRouteImport.update({
  id: '/launch',
  path: '/launch',
  getParentRoute: () => rootRouteImport,
} as any)
const FarmRoute = FarmRouteImport.update({
  id: '/farm',
  path: '/farm',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreRoute = ExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRouteImport,
} as any)
const EnsRoute = EnsRouteImport.update({
  id: '/ens',
  path: '/ens',
  getParentRoute: () => rootRouteImport,
} as any)
const CultRoute = CultRouteImport.update({
  id: '/cult',
  path: '/cult',
  getParentRoute: () => rootRouteImport,
} as any)
const CoinsRoute = CoinsRouteImport.update({
  id: '/coins',
  path: '/coins',
  getParentRoute: () => rootRouteImport,
} as any)
const CoinpaperRoute = CoinpaperRouteImport.update({
  id: '/coinpaper',
  path: '/coinpaper',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PositionsIndexRoute = PositionsIndexRouteImport.update({
  id: '/positions/',
  path: '/positions/',
  getParentRoute: () => rootRouteImport,
} as any)
const FarmIndexRoute = FarmIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FarmRoute,
} as any)
const UUserIdRoute = UUserIdRouteImport.update({
  id: '/u/$userId',
  path: '/u/$userId',
  getParentRoute: () => rootRouteImport,
} as any)
const PositionsCreateRoute = PositionsCreateRouteImport.update({
  id: '/positions/create',
  path: '/positions/create',
  getParentRoute: () => rootRouteImport,
} as any)
const FarmCreateRoute = FarmCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => FarmRoute,
} as any)
const CCoinIdRoute = CCoinIdRouteImport.update({
  id: '/c/$coinId',
  path: '/c/$coinId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coinpaper': typeof CoinpaperRoute
  '/coins': typeof CoinsRoute
  '/cult': typeof CultRoute
  '/ens': typeof EnsRoute
  '/explore': typeof ExploreRoute
  '/farm': typeof FarmRouteWithChildren
  '/launch': typeof LaunchRoute
  '/limit': typeof LimitRoute
  '/oneshot': typeof OneshotRoute
  '/orders': typeof OrdersRoute
  '/send': typeof SendRoute
  '/swap': typeof SwapRoute
  '/user': typeof UserRoute
  '/wlfi': typeof WlfiRoute
  '/c/$coinId': typeof CCoinIdRoute
  '/farm/create': typeof FarmCreateRoute
  '/positions/create': typeof PositionsCreateRoute
  '/u/$userId': typeof UUserIdRoute
  '/farm/': typeof FarmIndexRoute
  '/positions': typeof PositionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coinpaper': typeof CoinpaperRoute
  '/coins': typeof CoinsRoute
  '/cult': typeof CultRoute
  '/ens': typeof EnsRoute
  '/explore': typeof ExploreRoute
  '/launch': typeof LaunchRoute
  '/limit': typeof LimitRoute
  '/oneshot': typeof OneshotRoute
  '/orders': typeof OrdersRoute
  '/send': typeof SendRoute
  '/swap': typeof SwapRoute
  '/user': typeof UserRoute
  '/wlfi': typeof WlfiRoute
  '/c/$coinId': typeof CCoinIdRoute
  '/farm/create': typeof FarmCreateRoute
  '/positions/create': typeof PositionsCreateRoute
  '/u/$userId': typeof UUserIdRoute
  '/farm': typeof FarmIndexRoute
  '/positions': typeof PositionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/coinpaper': typeof CoinpaperRoute
  '/coins': typeof CoinsRoute
  '/cult': typeof CultRoute
  '/ens': typeof EnsRoute
  '/explore': typeof ExploreRoute
  '/farm': typeof FarmRouteWithChildren
  '/launch': typeof LaunchRoute
  '/limit': typeof LimitRoute
  '/oneshot': typeof OneshotRoute
  '/orders': typeof OrdersRoute
  '/send': typeof SendRoute
  '/swap': typeof SwapRoute
  '/user': typeof UserRoute
  '/wlfi': typeof WlfiRoute
  '/c/$coinId': typeof CCoinIdRoute
  '/farm/create': typeof FarmCreateRoute
  '/positions/create': typeof PositionsCreateRoute
  '/u/$userId': typeof UUserIdRoute
  '/farm/': typeof FarmIndexRoute
  '/positions/': typeof PositionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/coinpaper'
    | '/coins'
    | '/cult'
    | '/ens'
    | '/explore'
    | '/farm'
    | '/launch'
    | '/limit'
    | '/oneshot'
    | '/orders'
    | '/send'
    | '/swap'
    | '/user'
    | '/wlfi'
    | '/c/$coinId'
    | '/farm/create'
    | '/positions/create'
    | '/u/$userId'
    | '/farm/'
    | '/positions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/coinpaper'
    | '/coins'
    | '/cult'
    | '/ens'
    | '/explore'
    | '/launch'
    | '/limit'
    | '/oneshot'
    | '/orders'
    | '/send'
    | '/swap'
    | '/user'
    | '/wlfi'
    | '/c/$coinId'
    | '/farm/create'
    | '/positions/create'
    | '/u/$userId'
    | '/farm'
    | '/positions'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/coinpaper'
    | '/coins'
    | '/cult'
    | '/ens'
    | '/explore'
    | '/farm'
    | '/launch'
    | '/limit'
    | '/oneshot'
    | '/orders'
    | '/send'
    | '/swap'
    | '/user'
    | '/wlfi'
    | '/c/$coinId'
    | '/farm/create'
    | '/positions/create'
    | '/u/$userId'
    | '/farm/'
    | '/positions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CoinpaperRoute: typeof CoinpaperRoute
  CoinsRoute: typeof CoinsRoute
  CultRoute: typeof CultRoute
  EnsRoute: typeof EnsRoute
  ExploreRoute: typeof ExploreRoute
  FarmRoute: typeof FarmRouteWithChildren
  LaunchRoute: typeof LaunchRoute
  LimitRoute: typeof LimitRoute
  OneshotRoute: typeof OneshotRoute
  OrdersRoute: typeof OrdersRoute
  SendRoute: typeof SendRoute
  SwapRoute: typeof SwapRoute
  UserRoute: typeof UserRoute
  WlfiRoute: typeof WlfiRoute
  CCoinIdRoute: typeof CCoinIdRoute
  PositionsCreateRoute: typeof PositionsCreateRoute
  UUserIdRoute: typeof UUserIdRoute
  PositionsIndexRoute: typeof PositionsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wlfi': {
      id: '/wlfi'
      path: '/wlfi'
      fullPath: '/wlfi'
      preLoaderRoute: typeof WlfiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/swap': {
      id: '/swap'
      path: '/swap'
      fullPath: '/swap'
      preLoaderRoute: typeof SwapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/send': {
      id: '/send'
      path: '/send'
      fullPath: '/send'
      preLoaderRoute: typeof SendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/oneshot': {
      id: '/oneshot'
      path: '/oneshot'
      fullPath: '/oneshot'
      preLoaderRoute: typeof OneshotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/limit': {
      id: '/limit'
      path: '/limit'
      fullPath: '/limit'
      preLoaderRoute: typeof LimitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/launch': {
      id: '/launch'
      path: '/launch'
      fullPath: '/launch'
      preLoaderRoute: typeof LaunchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/farm': {
      id: '/farm'
      path: '/farm'
      fullPath: '/farm'
      preLoaderRoute: typeof FarmRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ens': {
      id: '/ens'
      path: '/ens'
      fullPath: '/ens'
      preLoaderRoute: typeof EnsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cult': {
      id: '/cult'
      path: '/cult'
      fullPath: '/cult'
      preLoaderRoute: typeof CultRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coins': {
      id: '/coins'
      path: '/coins'
      fullPath: '/coins'
      preLoaderRoute: typeof CoinsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/coinpaper': {
      id: '/coinpaper'
      path: '/coinpaper'
      fullPath: '/coinpaper'
      preLoaderRoute: typeof CoinpaperRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/positions/': {
      id: '/positions/'
      path: '/positions'
      fullPath: '/positions'
      preLoaderRoute: typeof PositionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/farm/': {
      id: '/farm/'
      path: '/'
      fullPath: '/farm/'
      preLoaderRoute: typeof FarmIndexRouteImport
      parentRoute: typeof FarmRoute
    }
    '/u/$userId': {
      id: '/u/$userId'
      path: '/u/$userId'
      fullPath: '/u/$userId'
      preLoaderRoute: typeof UUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/positions/create': {
      id: '/positions/create'
      path: '/positions/create'
      fullPath: '/positions/create'
      preLoaderRoute: typeof PositionsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/farm/create': {
      id: '/farm/create'
      path: '/create'
      fullPath: '/farm/create'
      preLoaderRoute: typeof FarmCreateRouteImport
      parentRoute: typeof FarmRoute
    }
    '/c/$coinId': {
      id: '/c/$coinId'
      path: '/c/$coinId'
      fullPath: '/c/$coinId'
      preLoaderRoute: typeof CCoinIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface FarmRouteChildren {
  FarmCreateRoute: typeof FarmCreateRoute
  FarmIndexRoute: typeof FarmIndexRoute
}

const FarmRouteChildren: FarmRouteChildren = {
  FarmCreateRoute: FarmCreateRoute,
  FarmIndexRoute: FarmIndexRoute,
}

const FarmRouteWithChildren = FarmRoute._addFileChildren(FarmRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CoinpaperRoute: CoinpaperRoute,
  CoinsRoute: CoinsRoute,
  CultRoute: CultRoute,
  EnsRoute: EnsRoute,
  ExploreRoute: ExploreRoute,
  FarmRoute: FarmRouteWithChildren,
  LaunchRoute: LaunchRoute,
  LimitRoute: LimitRoute,
  OneshotRoute: OneshotRoute,
  OrdersRoute: OrdersRoute,
  SendRoute: SendRoute,
  SwapRoute: SwapRoute,
  UserRoute: UserRoute,
  WlfiRoute: WlfiRoute,
  CCoinIdRoute: CCoinIdRoute,
  PositionsCreateRoute: PositionsCreateRoute,
  UUserIdRoute: UUserIdRoute,
  PositionsIndexRoute: PositionsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
