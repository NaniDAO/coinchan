export const PredictionMarketAddress = "0x0000000000337f99F242D11AF1908469B0424C8D";

export const PredictionMarketAbi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allMarkets",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      { name: "spender", type: "address", internalType: "address" },
      { name: "id", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "buyNo",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "wstIn", type: "uint256", internalType: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "buyYes",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "wstIn", type: "uint256", internalType: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "closeMarket",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createMarket",
    inputs: [
      { name: "description", type: "string", internalType: "string" },
      { name: "resolver", type: "address", internalType: "address" },
      { name: "close", type: "uint72", internalType: "uint72" },
      { name: "canClose", type: "bool", internalType: "bool" },
    ],
    outputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "noId", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "descriptions",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarket",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "yesSupply", type: "uint256", internalType: "uint256" },
      { name: "noSupply", type: "uint256", internalType: "uint256" },
      { name: "resolver", type: "address", internalType: "address" },
      { name: "resolved", type: "bool", internalType: "bool" },
      { name: "outcome", type: "bool", internalType: "bool" },
      { name: "pot", type: "uint256", internalType: "uint256" },
      { name: "payoutPerShare", type: "uint256", internalType: "uint256" },
      { name: "desc", type: "string", internalType: "string" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarketId",
    inputs: [
      { name: "description", type: "string", internalType: "string" },
      { name: "resolver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getMarkets",
    inputs: [
      { name: "start", type: "uint256", internalType: "uint256" },
      { name: "count", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      { name: "marketIds", type: "uint256[]", internalType: "uint256[]" },
      { name: "yesSupplies", type: "uint256[]", internalType: "uint256[]" },
      { name: "noSupplies", type: "uint256[]", internalType: "uint256[]" },
      { name: "resolvers", type: "address[]", internalType: "address[]" },
      { name: "resolved", type: "bool[]", internalType: "bool[]" },
      { name: "outcome", type: "bool[]", internalType: "bool[]" },
      { name: "pot", type: "uint256[]", internalType: "uint256[]" },
      { name: "payoutPerShare", type: "uint256[]", internalType: "uint256[]" },
      { name: "descs", type: "string[]", internalType: "string[]" },
      { name: "next", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNoId",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getUserMarkets",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "start", type: "uint256", internalType: "uint256" },
      { name: "count", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      { name: "yesIds", type: "uint256[]", internalType: "uint256[]" },
      { name: "noIds", type: "uint256[]", internalType: "uint256[]" },
      { name: "yesBalances", type: "uint256[]", internalType: "uint256[]" },
      { name: "noBalances", type: "uint256[]", internalType: "uint256[]" },
      { name: "claimables", type: "uint256[]", internalType: "uint256[]" },
      { name: "isResolved", type: "bool[]", internalType: "bool[]" },
      { name: "tradingOpen_", type: "bool[]", internalType: "bool[]" },
      { name: "next", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "impliedYesOdds",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "numerator", type: "uint256", internalType: "uint256" },
      { name: "denominator", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperator",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "marketCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "markets",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "resolver", type: "address", internalType: "address" },
      { name: "resolved", type: "bool", internalType: "bool" },
      { name: "outcome", type: "bool", internalType: "bool" },
      { name: "canClose", type: "bool", internalType: "bool" },
      { name: "close", type: "uint72", internalType: "uint72" },
      { name: "pot", type: "uint256", internalType: "uint256" },
      { name: "payoutPerShare", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "resolve",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "outcome", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "resolverFeeBps",
    inputs: [{ name: "resolver", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sellNo",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sellYes",
    inputs: [
      { name: "marketId", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperator",
    inputs: [
      { name: "operator", type: "address", internalType: "address" },
      { name: "approved", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setResolverFeeBps",
    inputs: [{ name: "bps", type: "uint16", internalType: "uint16" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tradingOpen",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      { name: "receiver", type: "address", internalType: "address" },
      { name: "id", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      { name: "sender", type: "address", internalType: "address" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "id", type: "uint256", internalType: "uint256" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "winningId",
    inputs: [{ name: "marketId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      { name: "owner", type: "address", indexed: true, internalType: "address" },
      { name: "spender", type: "address", indexed: true, internalType: "address" },
      { name: "id", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Bought",
    inputs: [
      { name: "buyer", type: "address", indexed: true, internalType: "address" },
      { name: "id", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Claimed",
    inputs: [
      { name: "claimer", type: "address", indexed: true, internalType: "address" },
      { name: "id", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "shares", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "payout", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Closed",
    inputs: [
      { name: "marketId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "closedAt", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "by", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Created",
    inputs: [
      { name: "marketId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "noId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "description", type: "string", indexed: false, internalType: "string" },
      { name: "resolver", type: "address", indexed: false, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorSet",
    inputs: [
      { name: "owner", type: "address", indexed: true, internalType: "address" },
      { name: "operator", type: "address", indexed: true, internalType: "address" },
      { name: "approved", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Resolved",
    inputs: [
      { name: "marketId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "outcome", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ResolverFeeSet",
    inputs: [
      { name: "resolver", type: "address", indexed: true, internalType: "address" },
      { name: "bps", type: "uint16", indexed: false, internalType: "uint16" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Sold",
    inputs: [
      { name: "seller", type: "address", indexed: true, internalType: "address" },
      { name: "id", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      { name: "caller", type: "address", indexed: false, internalType: "address" },
      { name: "from", type: "address", indexed: true, internalType: "address" },
      { name: "to", type: "address", indexed: true, internalType: "address" },
      { name: "id", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyResolved",
    inputs: [],
  },
  {
    type: "error",
    name: "AmountZero",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotClose",
    inputs: [],
  },
  {
    type: "error",
    name: "FeeOverflow",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidClose",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidResolver",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketClosed",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketExists",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketNotClosed",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketNotResolved",
    inputs: [],
  },
  {
    type: "error",
    name: "MarketResolved",
    inputs: [],
  },
  {
    type: "error",
    name: "MulDivFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoWinningShares",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyResolver",
    inputs: [],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
] as const;
